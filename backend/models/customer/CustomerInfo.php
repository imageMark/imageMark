<?php


namespace backend\models\customer;


class CustomerInfo extends \common\models\CustomerInfo
{
    public $phone;
    public $relation;
    /**
     * @return array
     */
    public function rules()
    {
        return [
            [['phone', 'truename','relation','company_id','department_id' ], 'required','on'=>'create'],
            [[ 'truename','relation','department_id' ], 'required','on'=>'update'],
            [['customer_id', 'company_id', 'department_id', 'employee_id', 'status', 'score', 'type', 'sign_num', 'login_time', 'study_time', 'question_num', 'sign_time', 'created_at', 'updated_at'], 'integer'],
            [['truename', 'gender', 'education', 'nickname', 'position'], 'string', 'max' => 20],
            [['thumb_url', 'api_token'], 'string', 'max' => 255],
            [['email', 'role_id', 'cate_tag'], 'string', 'max' => 50],
            [['customer_id'], 'unique']
        ];
    }

    /**
     * @return string
     */
    public function getUsername(){
        $result = Customer::findOne($this->customer_id);
        return $result->phone;
    }

    /**
     * @param array $data
     * @param null $formName
     * @return bool
     */
    public function load($data, $formName = null)
    {
        if(parent::load($data, $formName)) { // TODO: Change the autogenerated stub
            if($this->phone){
                if(Customer::findOne(['phone'=>$this->phone])){
                    $this->addError('phone','手机号码已经注册了！');
                    return false;
                }
                $model = new Customer();
                $model->company_id = $this->company_id;
                $model->department_id = $this->department_id;
                $model->phone = $this->phone;
                $model->user_status =1;
                if($model->save(false)){
                    $this->customer_id = $model->attributes['id'];
                }else{
                    return false;
                }
            }
            if(is_array($this->relation)&&count($this->relation)>0) {
                $this->relation_operation = implode(",",$this->relation);
            }
            return true;
        }
        return false;
    }


    /**
     * 保存excel数据上传
     * @param $data
     * @return array|bool
     */
    public static function saveExcelData($data){
        if(is_array($data) && $data){
            $result =[];
            foreach ($data as $key => $val){
                if(Customer::findOne(['phone'=>$val['phone']])){
                    $result[$key]['truename'] = $val['truename'];
                    $result[$key]['phone'] = $val['phone'];
                    $result[$key]['message'] = "手机号码已经注册！";
                    continue;
                }else{
                    $Company = Company::findOne(['name'=>$val['company']]);
                    if(!$Company){
                        $result[$key]['truename'] = $val['truename'];
                        $result[$key]['phone'] = $val['phone'];
                        $result[$key]['message'] = "所属企业不存在！";
                        continue;
                    }
                    $Department = Department::findOne(['company_id'=>$Company->id,'name'=>$val['department']]);
                    if(!$Department){
                        $result[$key]['truename'] = $val['truename'];
                        $result[$key]['phone'] = $val['phone'];
                        $result[$key]['message'] = "所属部门不存在！";
                        continue;
                    }
                    $Customer = new Customer();
                    $Customer->phone = $val['phone'];
                    $Customer->department_id = $Department->id;
                    $Customer->company_id = $Company->id;
                    $Customer->user_status =1;
                    if($Customer->save(false)){
                        $Info = new CustomerInfo();
                        $Info->department_id = $Department->id;
                        $Info->company_id = $Company->id;
                        $Info->customer_id = $Customer->attributes['id'];
                        $Info->truename = $val['truename'];
                        $Info->status =1;
                        $Info->save(false);
                    }
                }
            }
            return $result;
        }
        return false;
    }

}